version: '3.9'
services:
  nginx:
    build: 
      context: .
    restart: unless-stopped
    environment:
      API_HOST: ${API_HOST:-api}
      API_PORT: ${API_PORT:-80}
      WEB_HOST: ${WEB_HOST:-web}
      WEB_PORT: ${WEB_PORT:-80}
      ENABLE_HTTPS: ${ENABLE_HTTPS:-false}
      SSL_CERT: ${SSL_CERT}
      SSL_KEY: ${SSL_KEY}
    ports:
      - "443:443"
      - "80:80"
    networks:
      - spec-box-network

  api:
    image: ${API_IMAGE:-snitkody/spec-box-tms-api}:${API_VERSION:-latest}
    restart: unless-stopped
    environment:
      AUTO_MIGRATE: ${AUTO_MIGRATE:-true}
      ConnectionStrings__default: ${CONNECTION_STRING:-Host=postgres;Port=5432;Database=specbox;Username=postgres;Password=Pa$$w0rd;}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spec-box-network

  web:
    image: ${WEB_IMAGE:-snitkody/spec-box-tms-web}:${WEB_VERSION:-latest}
    restart: unless-stopped
    networks:
      - spec-box-network

  postgres:
    image: postgres:15.1-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-Pa$$w0rd}
      - POSTGRES_DB=${POSTGRES_DB:-specbox}
    ports:
      - 5432:5432
    networks:
      - spec-box-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 5s
      timeout: 5s
      retries: 5


networks:
  spec-box-network:
    name: spec-box-network
    driver: bridge

volumes:
  postgres-data:
    name: postgres-data